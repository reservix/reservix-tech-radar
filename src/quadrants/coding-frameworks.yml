name: Languages & Frameworks
quadrant: 2
entries:
  - label: PHP
    description: >
      <a href="https://www.php.net/">PHP</a> is a widely-used server-side
      scripting language known for its simplicity and flexibility in web
      development.

      We are using PHP because it offers robust community support, extensive
      libraries, and seamless integration with various databases. It is our
      primary language for backend development.

      PHP is currently not recommended for serverless contexts. Consequently,
      the use of Bref is on hold. For new serverless projects—especially those
      involving Lambda functions—teams should consider adopting Node.js and
      TypeScript, which offer improved performance and a more robust development
      ecosystem.
    ring: adopt
    active: true
    moved: 0
  - label: Symfony
    description: >
      The <a href="https://symfony.com/">Symfony</a> PHP framework is a
      well-organized, feature-rich PHP framework whose architecture paves the
      way for developers to build sustainable web applications in the easiest
      way possible which further enhances the users' experience.

      It is widely used in our organization and our developers have a lot of
      experience solving business problems with it. When writing a backend in
      PHP, consider using Symfony.
    ring: adopt
    active: true
    moved: 0
  - label: TypeScript
    description: >
      <a href="https://www.typescriptlang.org/">TypeScript</a> is a
      strongly-typed  superset of JavaScript that adds static typing to the
      language, improving code  quality and maintainability.

      We are using TypeScript because it catches errors early in development,
      add the  ability to refactor code safely and enhances collaboration in
      large codebases.  It is our primary language when developing a UI and
      writing a backend with Node.js.
    ring: adopt
    active: true
    moved: 0
  - label: JavaScript
    description: >
      <a
      href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript
      (JS)</a> is a lightweight, interpreted, or just-in-time compiled
      programming language with first-class functions. JavaScript is a
      dynamically typed language, which means that types are checked, and data
      type errors are only detected at runtime, which leads to errors only show
      during production.

      JavaScript is only suited for small-scale applications. TypeScript should
      be favored over JavaScript. TypeScript code is more reliable and easier to
      refactor. This enables developers to evade errors and do rewrites much
      easier.

      We are no longer using JavaScript for new developments, and any time
      existing  JS code needs modification or updates, it’s important to
      consider refactoring  it to TypeScript.
    ring: onHold
    active: true
    moved: 0
  - label: jQuery
    description: >
      <a href="https://jquery.com/">jQuery</a> is a lightweight JavaScript
      library that simplifies HTML document manipulation, event handling, and
      animation with an easy-to-use API. It was widely popular for making
      cross-browser development easier, though its use has declined with the
      rise of modern frameworks like React.

      React has become our go-to choice for building UIs, particularly when
      paired with Marigold. We are not using jQuery for new developments, and
      whenever we modify, add, or change existing JavaScript code, it should be
      considered for refactoring to React.
    ring: onHold
    active: true
    moved: 0
  - label: React
    description: >
      <a href="https://react.dev/">React</a> is a popular JavaScript library for
      building user interfaces, known for its component-based architecture and
      efficient rendering. It supports reusable components, offers a streamlined
      development process, and has a large, comprehensive ecosystem that
      provides numerous tools and resources.

      React has become our go-to choice for building UIs, particularly when
      paired with Marigold. This combination enables us to develop our UIs more
      efficiently and consistently.
    ring: adopt
    active: true
    moved: 0
  - label: Vue
    description: >
      <a href="https://vuejs.org/">Vue.js</a> is a progressive JavaScript
      framework for building user interfaces, designed with an approachable core
      and a focus on incrementally adaptable architecture. It offers features
      like two-way data binding and a component-based structure.

      While we use Vue.js in a few apps, we don't see any significant benefits
      over the more established React. To streamline our efforts and enhance
      developer experience, we focus on a single framework, opting to use React
      and Marigold for developing new features or apps.
    ring: onHold
    active: true
    moved: 0
  - label: C#
    description: >
      <a href="https://docs.microsoft.com/en-us/dotnet/csharp/">C#</a> is a
      versatile,  object-oriented programming language developed by Microsoft,
      commonly used for building  a wide range of applications from web to
      desktop.

      We use C# for specific scenarios where hardware integration is required,
      such as ticket  scanner software.
    ring: adopt
    active: true
    moved: 1
  - label: Java
    description: >
      <a href="https://www.java.com/">Java</a> is a robust, object-oriented
      programming  language renowned for its portability and performance across
      various platforms.

      We are currently testing Java to address specific scenarios within the
      domain of authentication, as it is better suited for this purpose due to
      its compatibility with the underlying technology, which is also written in
      Java. This trial period aims to evaluate its effectiveness, and if a team
      wishes to use Java for other projects, they should first consult with
      their respective area architect.
    active: true
    ring: trial
    moved: 0
  - label: Zend
    description: >
      <a href="https://framework.zend.com/">Zend Framework</a> is a collection
      of professional PHP packages. It can be used to develop web applications
      and services using PHP 5.6+, and provides 100% object-oriented code using
      a broad spectrum of language features.

      Our teams switched or are using Symfony to build our applications and thus
      the later should be preferred for projects.
    ring: onHold
    active: true
    moved: 0
  - label: Marigold
    description: >
      <a href="https://marigold-ui.io/">Marigold</a> is a React implementation
      of Reservix' design language. It aims to provides a robust and modular
      foundation for building digital products that are accessible and adaptive
      across screen sizes while delivering a consistent, delightful experience
      for all users.

      After an intensive trial period, it was confirmed that Marigold
      significantly  improves UI development both from an engineering and design
      perspective. When  developing UIs, especially with React, Marigold is
      essential for ensuring  accessible and consistent user interfaces.
    ring: adopt
    active: true
    moved: 0
  - label: Next.js
    description: >
      <a href="https://nextjs.org/">Next.js</a> is a robust React framework
      designed  to enhance web application performance and developer
      productivity. It offers features such as server-side rendering, static
      site generation, and API routes, which improve performance, SEO, and
      scalability.

      After assessing it in multiple projects, including those in the financial
      domain  and for documentation, we feel confident moving it to “trial.”
      Teams interested in  adopting Next.js should contact their area architect
      for guidance.
    ring: trial
    active: true
    moved: 0
  - label: Express
    description: >
      <a href="https://expressjs.com/">Express</a> is a back end web application
      framework for Node.js, released as free and open-source software under the
      MIT License. It is designed for building web applications and APIs and has
      been called the de facto standard server framework for Node.js in the
      past.

      The developer experience of Express feels dated. Todays standard tooling
      and patterns, like async/await, need to be stack ontop of Express. There
      is no good support for TypeScript. And worst of it all, Epxress is not
      actively maintained. An attempt to realse a new major version was started
      over 7 years ago.
    ring: onHold
    active: false
    moved: 0
  - label: Fastify
    description: >
      <a href="https://www.fastify.io/">Fastify</a> is inspired by Hapi and
      Express and provides a faster alternative to Express with less overhead.
      It is built as a general-purpose web framework, but it shines when it
      comes to its fast HTTP APIs. It offers ease in handling request-response
      validations, support for TypeScript and a plugin ecosystem giving  teams
      an easier experience developing software.

      Unlike Express, Fastify's core is implemented with asynchronous code,
      which not only leads to a better developer experience but also to less
      memory leaks, a problem often times associated with Express. Besides that
      Fastify comes with a much better performance than Express. Thus we
      recommend to assess Fastify for new projects.
    ring: assess
    active: false
    moved: 0
  - label: GraalVM
    description: >
      <a href="https://www.graalvm.org/">GraalVM</a> is a high-performance
      runtime that provides support for multiple programming languages and
      execution modes, enabling seamless interoperability between them. 

      After assessing it in projects within the business integration domain, we
      see potential benefits and are open to exploring its use further. Teams
      interested in adopting GrailM should contact their area architect for
      guidance.
    ring: assess
    active: false
    moved: 0
  - label: Spring Boot
    description: >
      <a href="https://spring.io/projects/spring-boot">Spring Boot</a> is a
      framework that simplifies the development of Java-based applications by
      providing pre-configured setups and an embedded server, allowing for quick
      and efficient deployment.

      After assessing it in projects within the business integration domain, we
      see potential benefits and are open to exploring its use further. Teams
      interested in adopting GrailM should contact their area architect for
      guidance.
    ring: assess
    active: false
    moved: 0
  - label: GraphQL
    description: >
      There are many successful <a
      href="https://github.com/facebook/graphql">GraphQL</a> implementations in
      our projects. That said, we've concerns about misuse of this framework and
      some of the problems that can occur. Examples include performance gotchas
      around N+1 queries and lots of boilerplate code needed when adding new
      models, leading to complexity. There are workarounds to these gotchas such
      as query caching.

      TODO
    ring: onHold
    active: true
    moved: 0
  - label: Event-driven
    description: >
      Message-driven system integration provides multiple benefits. One
      remarkable benefit is that this integration style uses asynchronous
      communication, i.e. the temporal decoupling of sender and receiver. At
      Reservix, we have started to establish an event-driven architecture as our
      preferred way of system integration.

      You can read more about this topics <a
      href="https://reservix.atlassian.net/l/c/H4Hvr9k0">here</a> (internal
      link).
    ring: adopt
    active: true
    moved: 0
  - label: Tailwind CSS
    description: >
      <a href="https://tailwindcss.com/">Tailwind CSS</a> is a utility-first CSS
      framework that provides pre-built classes to build custom designs directly
      in your markup. Its flexible approach accelerates development while
      maintaining a high degree of customization.

      Teams are encouraged to adopt Tailwind CSS in combination with <a
      href="https://www.marigold-ui.io/?theme=b2b">Marigold</a> to fully
      leverage our design system. This integration not only ensures consistency
      across our products but also offers the flexibility needed to tailor
      designs to domain-specific requirements.
    ring: adopt
    active: true
    moved: 2
  - label: .NET MAUI
    description: >
      <a href="https://dotnet.microsoft.com/en-us/apps/maui">.NET MAUI
      (Multi-platform App UI)</a> is a framework that enables the development of
      native applications for mobile and desktop platforms using C#. It
      streamlines cross-platform app development by allowing a unified codebase
      for Android, iOS, Windows, and macOS.

      Teams using C# can adopt .NET MAUI to leverage their existing expertise,
      reduce development overhead, and efficiently build consistent,
      high-quality applications across multiple platforms.
    ring: adopt
    active: true
    moved: 2
  - label: Node.js
    description: >
      <a href="https://nodejs.org">Node.js</a> is a powerful, open-source
      JavaScript runtime built on Chrome's V8 engine, enabling the development
      of scalable network applications through its event-driven, non-blocking
      I/O model.

      Teams are encouraged to adopt Node.js, especially as a runtime for
      Lambdas, to take advantage of its asynchronous capabilities and robust
      ecosystem for building high-performance serverless applications.
    ring: adopt
    active: true
    moved: 2
