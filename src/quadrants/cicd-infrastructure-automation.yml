name: CI/CD, Infrastructure & Automation
quadrant: 3
entries:
  - label: Docker
    description: >
      <a href="https://www.docker.com/">Docker</a> is a platform that automates
      the deployment and management of applications within lightweight, portable
      containers, ensuring consistency across different environments.

      Our entire infrastructure is built using Docker, making it the default
      method for both deploying and locally developing software,
    ring: adopt
    active: true
    moved: 0
  - label: GitLab CI/CD
    description: >
      <a href="https://docs.gitlab.com/ee/ci/">GitLab CI/CD</a>  is an
      integrated toolset for continuous integration and continuous delivery,
      enabling automated testing, building, and deployment of code within
      GitLab.

      It is the default platform we use to manage and develop all of our
      closed-source software, ensuring consistency and efficiency across our
      products, esuring our projects are healthy and meet our quality standards.
    ring: adopt
    active: true
    moved: 0
  - label: GitHub Actions
    description: >
      <a href="https://github.com/features/actions">GitHub Actions</a> is a
      feature that enables automation of tasks and workflows directly within
      GitLab, similar to GitHub Actions. It allows developers to define custom
      workflows, automate processes, and integrate seamlessly with their
      existing CI/CD pipelines, enhancing productivity and collaboration.

      Projects, especially the open source ones, that are hosted on GitHub
      should make use of Github Actions to ensure that the projects meet our
      quality standards.
    ring: adopt
    active: true
    moved: 0
  - label: Kibana
    description: >
      When combining modern techniques and architecture styles, such as
      microservices, DevOps and QA in production, development teams need
      increasingly sophisticated monitoring. Simply looking a graphs of disk
      usage and CPU utilization is not sufficient anymore, and many teams
      collect application and business-specific metrics using tools. <a
      href="https://www.elastic.co/kibana/">Kibana</a> is a tools that can help
      with gathering this data and boos observability.

      We use Kibana extensively to ensure our applications run smoothly even
      under high-load scenarios. Kibana helps us to find issues with our system
      fast and react accordingly. Based on its strengths, Kibana has become our
      default choice for observing our production environments.
    ring: adopt
    active: true
    moved: 0
  - label: Terraform
    description: >
      <a href=" https://www.terraform.io/">Terraform</a> is an open-source
      infrastructure as code tool that allows developers to define and provision
      data center infrastructure using a declarative configuration language. It
      enables consistent and repeatable deployment of cloud and on-premises
      resources, simplifying infrastructure management across multiple
      environments.

      Terraform is widely used to power and manage our infrastructure, ensuring
      consistent and scalable deployment.
    ring: adopt
    active: true
    moved: 1
