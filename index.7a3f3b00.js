function e(e){return e&&e.__esModule?e.default:e}const a=[{id:"adopt",name:"Adopt",color:"#74b816"},{id:"trial",name:"Trial",color:"#228be6"},{id:"assess",name:"Assess",color:"#fab005"},{id:"onHold",name:"On Hold",color:"#fa5252"}],t=a.reduce(((e,a,t)=>(e[a.id]=t,e)),{});var i;i={name:"CI/CD, Infrastructure & Automation",quadrant:3,entries:[{label:"Docker",description:'<a href="https://www.docker.com/">Docker</a> is an open source containerization platform. It enables developers to package applications into containers—standardized executable components combining application source code with the operating system (OS) libraries and dependencies required to run that code in any environment.\nDevelopment teams love Docker, as the Docker image format makes it easier to achieve parity between development and production, making for reliable deployments. It is a natural fit in a microservices-style application as a packaging mechanism for self-contained services. On the operational front, Docker support in monitoring tools (Sensu, Prometheus, cAdvisor, etc.), orchestration tools (Kubernetes, Marathon, etc.) and deployment-automation tools reflect the growing maturity of the platform and its readiness for production use.\n',ring:"adopt",active:!0,moved:0},{label:"GitLab CI/CD",description:'<a href="https://docs.gitlab.com/ee/ci/">GitLab CI/CD</a> is a tool for software development using the continuous methodologies: Continuous Integration (CI), Continuous Delivery (CD) and Continuous Deployment (CD). It helps to catch bugs and errors early in the development cycle and ensures that all the code deployed to production complies with the code standards you established for your app. GitLab CI/CD can automatically build, test, deploy, and monitor your applications.\nSince we are using GitLab as to develop and manage our software, using its integrated CI/CD tools is our preferred way to make sure our projects are healthy and meet our quality standards.\n',ring:"adopt",active:!0,moved:0},{label:"GitHub Actions",description:'<a href="https://github.com/features/actions">GitHub Actions</a> are a way to automate, customize, and execute software development workflows right in your repository with GitHub Actions. You can discover, create, and share actions to perform any job you\'d like, including CI/CD, and combine actions in a completely customized workflow.\nProjects, especially the open source ones, that are hosted on GitHub should make use of Github Actions to ensure that the projects meet our quality standards.\n',ring:"adopt",active:!0,moved:0},{label:"Kibana",description:'When combining modern techniques and architecture styles, such as microservices, DevOps and QA in production, development teams need increasingly sophisticated monitoring. Simply looking a graphs of disk usage and CPU utilization is not sufficient anymore, and many teams collect application and business-specific metrics using tools. <a href="https://www.elastic.co/kibana/">Kibana</a> is a tools that can help with gathering this data and boos observability.\nWe use Kibana extensively to ensure our applications run smoothly even under high-load scenarios. Kibana helps us to find issues with our system fast and react accordingly. Based on its strengths, Kibana has become our default choice for observing our production environments.\n',ring:"adopt",active:!0,moved:0},{label:"Terraform",description:'With <a href=" https://www.terraform.io/">Terraform</a>, you can manage cloud infrastructure by writing declarative definitions. The configuration of the servers instantiated by Terraform is usually left to tools like Puppet, Chef or Ansible.\n',ring:"trial",active:!0,moved:0},{label:"SonarQube",description:'<a href="SonarQube">SonarQube</a> is a open-source platform for the continuous inspection of code quality. It performs automatic reviews with static analysis of code which can detect bugs, code smells in many programming languages.\nWe infrequently set it up for projects but are not sure about the additional value we get from the analysis. We need more teams actively using it to make a decision.\n',link:"https://www.sonarqube.org/",ring:"assess",active:!0,moved:0},{label:"Chromatic",description:'<a href="https://www.chromatic.com/">Chromatic</a> is a cloud-based tool for visual regression tests, based on <a href="https://storybook.js.org/">Storybook</a>. It streamlines the process of shipping UI components with higher quality by providing a shared workspace for teams to comment and review UI work together.\nWe started using Chromatic for reviewing work on our design system in the hope that we more confidently can manage the different themes withour accidental breaking things. So far it looks very promising and an improvement to our previous workflow.\n',ring:"assess",active:!0,moved:0}]};var n;n={name:"Platform & Services",quadrant:1,entries:[{label:"MySQL",ring:"adopt",active:!0,moved:0},{label:"PostgreSQL",ring:"trial",active:!0,moved:0},{label:"Elasticsearch",description:'<a href="https://www.elastic.co/">Elastic Search</a> is an open source search platform. It is an extensible, multi-tenanted, and horizontally scalable search solution based on Apache Lucene. It allows complex data structures to be indexed and retrieved through a JSON based REST API. It provides an elegant model of operation with automatic discovery of peers in a cluster, failover, and replication. Elastic Search can be extended with a plugin system that allows adding new functionality and changing existing behavior. The community around this tool is quite vibrant as illustrated by the number of client libraries available in languages like Java, C#, Ruby, and JavaScript.\n',ring:"adopt",active:!0,moved:0},{label:"Redis",description:'<a href="https://redis.io/">Redis</a> is an open source, in-memory data structure store used as a database, cache, message broker, and streaming engine. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams.\n\n Redis has proven a useful tool on multiple projects as structured cache.\n',ring:"adopt",active:!0,moved:0},{label:"MongoDB",description:'For problems that fit the document database model, <a href="https://www.mongodb.com/">MongoDB</a> is now the most popular choice. In addition to ease of use and a solid technical implementation, the community and ecosystem contributed to this success. We are aware of problems where teams were tempted by the popularity of MongoDB when a document database was not a good fit or they did not understand the inherent complexity. When used appropriately, however, MongoDB has proven itself on many projects.\n',ring:"adopt",active:!0,moved:0},{label:"DynamoDB",ring:"assess",active:!0,moved:0},{label:"AWS Lambda",description:'<a href="https://aws.amazon.com/lambda/">AWS Lambda</a> is a serverless compute service that runs your code in response to events and automatically manages the underlying compute resources for you. These events may include changes in state or an update, such as a user placing an item in a shopping cart on an ecommerce website.\nFor stateless services, this means you don’t need to worry about running any long-lived machines, potentially reducing costs and improving security. Despite other forays into the PaaS space by AWS, Lambda looks the closest to getting this right.\nOur teams continue to enjoy using AWS Lambda and are beginning to use it to experiment with Serverless architectures.\n',ring:"adopt",active:!0,moved:0},{label:"SQS",ring:"adopt",active:!0,moved:0},{label:"SNS",ring:"adopt",active:!0,moved:0},{label:"Keycloak",ring:"adopt",active:!0,moved:0},{label:"Kubernetes",ring:"trial",active:!0,moved:0},{label:"Helm",ring:"trial",active:!0,moved:0},{label:"GraphQL",description:"There are many successful <a href=\"https://github.com/facebook/graphql\">GraphQL</a> implementations in our projects. That said, we've concerns about misuse of this framework and some of the problems that can occur. Examples include performance gotchas around N+1 queries and lots of boilerplate code needed when adding new models, leading to complexity. There are workarounds to these gotchas such as query caching.\nEven though it's not a silver bullet, we still think it's worth trying it as part of your architecture.\n",ring:"trial",active:!0,moved:0},{label:"HTTP/REST",description:"A REST API (also known as RESTful API) is an application programming interface (API or web API) that conforms to the constraints of REST architectural style and allows for interaction with RESTful web services.\nWhile REST APIs have their shortcommings (e.g. under or over data-fetching), REST APIs are scalable and allows developers to structure data as per their needs and the client knows what structure of data to expect. Moreover, this enables you to use many third-party APIs as well, by just simply seeing their sample data responses, and the best part is you probably don't have to manage any of these third-party APIs.\n",ring:"adopt",active:!0,moved:0},{label:"Event-driven",description:'Message-driven system integration provides multiple benefits. One remarkable benefit is that this integration style uses asynchronous communication, i.e. the temporal decoupling of sender and receiver. At Reservix, we have started to establish an event-driven architecture as our preferred way of system integration.\nYou can read more about this topics <a href="https://reservix.atlassian.net/l/c/H4Hvr9k0">here</a>.\n',ring:"trial",active:!0,moved:0},{label:"Serverless",link:"https://www.serverless.com/",ring:"trial",active:!0,moved:0}]};var o;o={name:"Tooling",quadrant:0,entries:[{label:"npm",description:'<a href="https://www.npmjs.com/">npm</a> is the default package manager for the JavaScript runtime environment Node.js. It consists of a command line client, also called npm, and an online database of public and paid-for private packages, called the npm registry. The registry is accessed via the client, and the available packages can be browsed and searched via the npm website. The package manager and the registry are managed by npm, Inc.\nEven though npm comes preinstalled with Node.js it lacks behind its competition, namely yarn and pnpm. The competitors also come with more relevant features and installing dependencies with npm is a magnitude slower than with other package manager. Because of this we recommend to use pnpm or yarn in your project instead.\n',link:"https://www.npmjs.com/",ring:"onHold",active:!0,moved:0},{label:"pnpm",description:'<a href="https://pnpm.io/">pnpm</a> is an up-and-coming package manager for Node.js. It has higher speed and greater efficiency compared to other package managers (e.g. yarn and npm). Dependencies are saved in a single place on the disk and are linked into the respective node_modules directories. pnpm also supports incremental optimization on file level, provides a solid API foundation to allow extension/customization and supports store server mode, which speeds up dependency download even more.\nThis is why we recommend using pnpm over other package managers.\n',ring:"adopt",active:!0,moved:0},{label:"yarn (v1)",description:'<a href="https://classic.yarnpkg.com/">Yarn</a> is a fast, reliable and secured package manager for JavaScript. Using a lock file and a deterministic algorithm, Yarn is able to guarantee that an installation that worked on one system will work exactly the same way on any other system. By efficiently queuing up requests, Yarn maximizes network utilization and as a result we\'ve seen faster package downloads. Yarn continues to be the package manager of choice for many teams.\nFair warning though, Yarn 1 is now in maintenance mode and pnpm is the preferred package manager over Yarn 2.\n',ring:"adopt",active:!0,moved:0},{label:"yarn (v2)",description:"<a href=\"https://yarnpkg.com/\">Yarn 2</a>, a major new release with a long list of changes and improvements. In addition to usability tweaks and improvements in the area of workspaces, Yarn 2 introduces the concept of zero-installs, which allows developers to run a project directly after cloning it. However, Yarn 2 includes some breaking changes which makes the upgrade nontrivial. It also defaults to plug'n'play (PnP) environments and at the same time doesn't support React Native in PnP environments. Teams can, of course, opt out of PnP or stay on Yarn 1.\nWe advise against using Yarn 2, since even after years of its release the adoption rate of it is very low and toolins support is very poor.\n",ring:"onHold",active:!0,moved:0},{label:"composer",description:"<a href=\"https://getcomposer.org/\">Composer</a> is a tool for dependency management in PHP. It is strongly influenced by tools from other technology stacks like Node's npm and Ruby's Bundler. We are now seeing wide adoption across PHP projects and it is fairly mature. You can still have to do some shims for internal libraries, you can use it for most external libraries.\n",ring:"adopt",active:!0,moved:0},{label:"Webpack",description:'<a href="http://webpack.github.io/">Webpack</a> has solidified itself as the go-to JavaScript module bundler. With its ever-growing list of loaders, it provides a single dependency tree for all your static assets, allowing flexible manipulation of JavaScript, CSS, etc. and minimizing production builds.\nThat said, newer bundlers (vite, Parcel, esbuild, tsup) have simpler configuration, allowing people to add/create plugins and configure the setup more easily, and some utilize ESM to make ultra fast reload speeds and smaller bundles. Because of this, Webpack is not the best tool to use anymore. We recommend to switch to another bundler for your projects.\n',ring:"onHold",active:!0,moved:0},{label:"Parcel",description:'<a href="https://parceljs.org/">Parcel</a> is a zero configuration build tool for the web. It combines a great out-of-the-box development experience with a scalable architecture that can take your project from just getting started to massive production application.\nIt has all the standard bundling features and provides true zero-configuration experience, making it really easy to get started with and use. It has fast bundle times and beats its competitors in many benchmarks. Parcel has gained a lot of community interest and continues to innovate.\nWe started using Parcel in some projects to quickly set up a great development environment. Since it doesn\'t require a lot of configuration, if any at all, it is easy to replace other bundlers like Webpack.\n',ring:"assess",active:!0,moved:0},{label:"tsup",description:'<a href="https://tsup.egoist.sh/">tsup</a> is zero-config TypeScript bundler, powered by <a href="esbuild">esbuild</a>. It comes with all the necessary features and can be used as a drop-in replacement for the default TypeScript compiler (tsc). Since it\'s written in Rust, it\'s also much faster than the tsc.\nWe started using tsup in some projects that previously used tsc. Migration was very smooth and we also found some potential bugs inside the TypeScript code, since tsup is much strciter thant tsc.\n',ring:"trial",active:!0,moved:0},{label:"jest",description:'<a href="https://jestjs.io/">jest</a> is a powerful Javascript testing framework that supports running tests in a (virtuell) browser environment as well as in Node.js. It is a very efficient and feature packed test runner that supports TypeScript, React and other technologies out of the box.\nWe recommend using jest as your default test runner for Javascript and Typescript based projects.\n',ring:"adopt",active:!0,moved:0},{label:"Cypress",description:'<a href="https://cypress.io/">Cypress</a> is an end-to-end test framework. It aims to address the pain points developers or QA engineers face while testing an application. Cypress is a more developer-friendly tool that uses a unique DOM manipulation technique and operates directly in the browser.\nFixing end-to-end test failures in CI can be a painful experience, especially in headless mode. Cypress is a useful tool that helps developers build end-to-end tests easily and records all test steps as a video in an MP4 file. Instead of reproducing the issue in headless mode, developers can watch the testing video in order to fix it.\nWe started using Cypress in some projects instead of Behat and the first results look very promising.\n',ring:"assess",active:!0,moved:0},{label:"Behat",description:'<a href="https://behat.org/">Behat</a> is a PHP testing framework which can be used to automate acceptance tests in a human readable language called Gherkin. Since it is based on Cucumber, it also helps teams to adopt and implement Behavioral Driven Development (BDD).\nWhile Behat is still a good solution, other frameworks like Cypress are more feature rich and developer friendly. We recommend to use an alternative like Cypress for new projects.\n',ring:"onHold",active:!0,moved:0}]};const s=[e({name:"Languages & Frameworks",quadrant:2,entries:[{label:"PHP",description:'<a href="https://www.php.net/">PHP</a> is a widely-used server-side scripting language known for its simplicity and flexibility in web development.\nWe are using PHP because it offers robust community support, extensive libraries, and seamless integration with various databases. It is our primary language for backend development.\n',ring:"adopt",active:!0,moved:0},{label:"Symfony",description:'The <a href="https://symfony.com/">Symfony</a> PHP framework is a well-organized, feature-rich PHP framework whose architecture paves the way for developers to build sustainable web applications in the easiest way possible which further enhances the users\' experience.\nIt is widely used in our organization and our developers have a lot of experience solving business problems with it. When writing a backend in PHP, consider using Symfony.\n',ring:"adopt",active:!0,moved:0},{label:"TypeScript",description:'<a href="https://www.typescriptlang.org/">TypeScript</a> is a strongly-typed  superset of JavaScript that adds static typing to the language, improving code  quality and maintainability.\nWe are using TypeScript because it catches errors early in development, add the  ability to refactor code safely and enhances collaboration in large codebases.  It is our primary language when developing a UI and writing a backend with Node.js.\n',ring:"adopt",active:!0,moved:0},{label:"JavaScript",description:'<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript (JS)</a> is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions. JavaScript is a dynamically typed language, which means that types are checked, and data type errors are only detected at runtime, which leads to errors only show during production.\nJavaScript is only suited for small-scale applications. TypeScript should be favored over JavaScript. TypeScript code is more reliable and easier to refactor. This enables developers to evade errors and do rewrites much easier.\nWe are no longer using JavaScript for new developments, and any time existing  JS code needs modification or updates, it’s important to consider refactoring  it to TypeScript.\n',ring:"onHold",active:!0,moved:0},{label:"jQuery",description:'<a href="https://jquery.com/">jQuery</a> is a lightweight JavaScript library that simplifies HTML document manipulation, event handling, and animation with an easy-to-use API. It was widely popular for making cross-browser development easier, though its use has declined with the rise of modern frameworks like React.\nReact has become our go-to choice for building UIs, particularly when paired with Marigold. We are not using jQuery for new developments, and whenever we modify, add, or change existing JavaScript code, it should be considered for refactoring to React.\n',ring:"onHold",active:!0,moved:0},{label:"React",description:'<a href="https://react.dev/">React</a> is a popular JavaScript library for building user interfaces, known for its component-based architecture and efficient rendering. It supports reusable components, offers a streamlined development process, and has a large, comprehensive ecosystem that provides numerous tools and resources.\nReact has become our go-to choice for building UIs, particularly when paired with Marigold. This combination enables us to develop our UIs more efficiently and consistently.\n',ring:"adopt",active:!0,moved:0},{label:"Vue",description:'<a href="https://vuejs.org/">Vue.js</a> is a progressive JavaScript framework for building user interfaces, designed with an approachable core and a focus on incrementally adaptable architecture. It offers features like two-way data binding and a component-based structure.\nWhile we use Vue.js in a few apps, we don\'t see any significant benefits over the more established React. To streamline our efforts and enhance developer experience, we focus on a single framework, opting to use React and Marigold for developing new features or apps.\n',ring:"onHold",active:!0,moved:-1},{label:"C#",description:'<a href="https://docs.microsoft.com/en-us/dotnet/csharp/">C#</a> is a versatile,  object-oriented programming language developed by Microsoft, commonly used for building  a wide range of applications from web to desktop.\nWe use C# for specific scenarios where hardware integration is required, such as ticket  scanner software. However, we prefer to focus on PHP as our primary backend language  to maintain consistency and efficiency across our projects.\n',ring:"onHold",active:!0,moved:-1},{label:"Java",description:'<a href="https://www.java.com/">Java</a> is a robust, object-oriented programming  language renowned for its portability and performance across various platforms.\nWe are currently testing Java to address specific scenarios within the domain of authentication, as it is better suited for this purpose due to its compatibility with the underlying technology, which is also written in Java. This trial period aims to evaluate its effectiveness, and if a team wishes to use Java for other projects, they should first consult with their respective area architect.\n',active:!0,ring:"trial",moved:0},{label:"Zend",description:'<a href="https://framework.zend.com/">Zend Framework</a> is a collection of professional PHP packages. It can be used to develop web applications and services using PHP 5.6+, and provides 100% object-oriented code using a broad spectrum of language features.\nOur teams switched or are using Symfony to build our applications and thus the later should be preferred for projects.\n',ring:"onHold",active:!0,moved:0},{label:"Marigold",description:'<a href="https://marigold-ui.io/">Marigold</a> is a React implementation of Reservix\' design language. It aims to provides a robust and modular foundation for building digital products that are accessible and adaptive across screen sizes while delivering a consistent, delightful experience for all users.\nAfter an intensive trial period, it was confirmed that Marigold significantly  improves UI development both from an engineering and design perspective. When  developing UIs, especially with React, Marigold is essential for ensuring  accessible and consistent user interfaces.\n',ring:"adopt",active:!0,moved:1},{label:"Next.js",description:'<a href="https://nextjs.org/">Next.js</a> is a robust React framework designed  to enhance web application performance and developer productivity. It offers features such as server-side rendering, static site generation, and API routes, which improve performance, SEO, and scalability.\nAfter assessing it in multiple projects, including those in the financial domain  and for documentation, we feel confident moving it to “trial.” Teams interested in  adopting Next.js should contact their area architect for guidance.\n',ring:"trial",active:!0,moved:0},{label:"Express",description:'<a href="https://expressjs.com/">Express</a> is a back end web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs and has been called the de facto standard server framework for Node.js in the past.\nThe developer experience of Express feels dated. Todays standard tooling and patterns, like async/await, need to be stack ontop of Express. There is no good support for TypeScript. And worst of it all, Epxress is not actively maintained. An attempt to realse a new major version was started over 7 years ago.\nThus we highly recommend new projects to use alternatives, like Fastify.\n',ring:"onHold",active:!1,moved:0},{label:"Fastify",description:'<a href="https://www.fastify.io/">Fastify</a> is inspired by Hapi and Express and provides a faster alternative to Express with less overhead. It is built as a general-purpose web framework, but it shines when it comes to its fast HTTP APIs. It offers ease in handling request-response validations, support for TypeScript and a plugin ecosystem giving  teams an easier experience developing software.\nUnlike Express, Fastify\'s core is implemented with asynchronous code, which not only leads to a better developer experience but also to less memory leaks, a problem often times associated with Express. Besides that Fastify comes with a much better performance than Express. Thus we recommend to assess Fastify for new projects.\n',ring:"assess",active:!1,moved:0},{label:"GraalVM",description:'<a href="https://www.graalvm.org/">GraalVM</a> is a high-performance runtime that provides support for multiple programming languages and execution modes, enabling seamless interoperability between them. \nAfter assessing it in projects within the business integration domain, we see potential benefits and are open to exploring its use further. Teams interested in adopting GrailM should contact their area architect for guidance.\n',ring:"assess",active:!1,moved:0},{label:"Spring Boot",description:'<a href="https://spring.io/projects/spring-boot">Spring Boot</a> is a framework that simplifies the development of Java-based applications by providing pre-configured setups and an embedded server, allowing for quick and efficient deployment.\nAfter assessing it in projects within the business integration domain, we see potential benefits and are open to exploring its use further. Teams interested in adopting GrailM should contact their area architect for guidance.\n',ring:"assess",active:!1,moved:0}]}),e(o),e(i),e(n)].sort(((e,a)=>e.quadrant-a.quadrant)),r=s.map((e=>e.entries.map((({description:a="",ring:i,...n})=>({...n,quadrant:e.quadrant,ring:t[i],description:a.split(/\r?\n/).filter(Boolean).map((e=>`<p>${e}</p>`)).join("")}))))).flat();radar_visualization({svg_id:"radar",title:"Reservix Tech Radar — 2024 Q3 (work in progress)",width:1500,height:1e3,colors:{background:"#fff",grid:"#adb5bd",inactive:"#dee2e6"},quadrants:s,rings:a,print_layout:!0,entries:r});const d=document.getElementById("radar"),c=document.getElementById("dialog"),l=document.getElementById("dialog-title"),p=document.getElementById("dialog-content"),u=document.getElementById("dialog-badge");document.addEventListener("click",(e=>{e.preventDefault();const t=e.target;if((e=>d.contains(e)&&"text"===e.tagName&&"a"===e.parentElement?.tagName)(t)){const e=(i=(e=>/\s(.*)/.exec(e.textContent)[1])(t),r.find((e=>e.label===i)));return l.innerHTML=e.label,p.innerHTML=e.description||"TDB",u.innerHTML=a[e.ring].name,u.style=`background: ${a[e.ring].color}`,void c.showModal()}var i;"dialog"===t.tagName.toLocaleLowerCase()&&c.close()}));
//# sourceMappingURL=index.7a3f3b00.js.map
